apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphhopper-service.fullname" . }}-on-demand
  labels:
    {{- include "graphhopper-service.labels" . | nindent 4 }}
    tags.datadoghq.com/service: "graphhopper"
    tags.datadoghq.com/version: "1.0"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "graphhopper-service.selectorLabels" . | nindent 6 }}
  strategy: {}
  template:
    metadata:
      annotations:
        ad.datadoghq.com/graphhopper-service.checks: |
          {
            "openmetrics": {
              "instances": [
                {
                  "openmetrics_endpoint": "http://%%host%%:8989/metrics",
                  "namespace": "graphhopper-service",
                  "metrics": [".*"]
                }
              ]
            }
          }
      labels:
        {{- include "graphhopper-service.selectorLabels" . | nindent 8 }}
        tags.datadoghq.com/service: "graphhopper"
        tags.datadoghq.com/version: "1.0"
        tags.datadoghq.com/env: {{ .Values.datadog.environment }}
        admission.datadoghq.com/enabled: "true"
    spec:
      tolerations:
        - key: "xlarge-only"
          value: "true"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: karpenter.sh/nodepool
                  operator: In
                  values: [ "xlarge" ]
                - key: karpenter.sh/capacity-type
                  operator: In
                  values: [ "on-demand" ]
      serviceAccountName: graphhopper-service
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.awsAccount }}.dkr.ecr.{{ .Values.region }}.amazonaws.com/graphhopper-service:{{ include "graphhopper-service.appVersion" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        lifecycle: 
          preStop:
            exec:
              command: ["/bin/sh", "-c" , "sleep 30"]
        readinessProbe:
          httpGet:
            path: /health
            port: 8989
          failureThreshold: 5
          periodSeconds: 2
          initialDelaySeconds: 30
        volumeMounts:
        - mountPath: /graphhopper/data
          name: s3-filesystem
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          value: {{ include "graphhopper-service.appVersion" . }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"

      volumes:
      - name: s3-filesystem
        persistentVolumeClaim:
          claimName: graphhopper-service-data

